name: RDP Access via ngrok

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration in minutes (max 360)'
        required: true
        default: '60'
        type: string

jobs:
  rdp-setup:
    runs-on: windows-latest
    
    steps:
    - name: Enable RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        
    - name: Create RDP User
      run: |
        net user rdpuser "P@ssw0rd123!" /add
        net localgroup administrators rdpuser /add
        
    - name: Setup ngrok
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive -Path "ngrok.zip" -DestinationPath "C:\ngrok"
        C:\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        
    - name: Start ngrok tunnel
      run: |
        Start-Process -FilePath "C:\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden
        Start-Sleep -Seconds 10
        
    - name: Get ngrok URL
      run: |
        $response = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels"
        $rdpUrl = $response.tunnels[0].public_url
        Write-Host "RDP URL: $rdpUrl"
        Write-Host "Username: rdpuser"
        Write-Host "Password: P@ssw0rd123!"
        
    - name: Keep session alive
      run: |
        $duration = [int]"${{ github.event.inputs.duration }}"
        if ($duration -gt 360) { $duration = 360 }
        Write-Host "Session will run for $duration minutes"
        Start-Sleep -Seconds ($duration * 60)
